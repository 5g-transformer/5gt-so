# Author: Jordi Baranda
# Copyright (C) 2019 CTTC/CERCA
# License: To be defined. Currently use is restricted to partners of the 5G-Transformer project,
#          http://5g-transformer.eu/, no use or redistribution of any kind outside the 5G-Transformer project is
#          allowed.
# Disclaimer: this software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied.

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class VnfOnboardingReply(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, onboarded_vnf_pkg_info_id: str=None, vnfd_id: str=None):  # noqa: E501
        """VnfOnboardingReply - a model defined in Swagger

        :param onboarded_vnf_pkg_info_id: The onboarded_vnf_pkg_info_id of this VnfOnboardingReply.  # noqa: E501
        :type onboarded_vnf_pkg_info_id: str
        :param vnfd_id: The vnfd_id of this VnfOnboardingReply.  # noqa: E501
        :type vnfd_id: str
        """
        self.swagger_types = {
            "onboarded_vnf_pkg_info_id": str,
            "vnfd_id": str
        }

        self.attribute_map = {
            "onboarded_vnf_pkg_info_id": "onboardedVnfPkgInfoId",
            "vnfd_id": "vnfdId"
        }

        self._onboarded_vnf_pkg_info_id = onboarded_vnf_pkg_info_id
        self._vnfd_id = vnfd_id

    @classmethod
    def from_dict(cls, dikt) -> "VnfOnboardingReply":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VnfOnboardingReply of this VnfOnboardingReply.  # noqa: E501
        :rtype: VnfOnboardingReply
        """
        return util.deserialize_model(dikt, cls)

    @property
    def onboarded_vnf_pkg_info_id(self) -> str:
        """Gets the onboarded_vnf_pkg_info_id of this VnfOnboardingReply.


        :return: The onboarded_vnf_pkg_info_id of this VnfOnboardingReply.
        :rtype: str
        """
        return self._onboarded_vnf_pkg_info_id

    @onboarded_vnf_pkg_info_id.setter
    def onboarded_vnf_pkg_info_id(self, onboarded_vnf_pkg_info_id: str):
        """Sets the onboarded_vnf_pkg_info_id of this VnfOnboardingReply.


        :param onboarded_vnf_pkg_info_id: The onboarded_vnf_pkg_info_id of this VnfOnboardingReply.
        :type onboarded_vnf_pkg_info_id: str
        """
        if onboarded_vnf_pkg_info_id is None:
            raise ValueError("Invalid value for `onboarded_vnf_pkg_info_id`, must not be `None`")  # noqa: E501

        self._onboarded_vnf_pkg_info_id = onboarded_vnf_pkg_info_id

    @property
    def vnfd_id(self) -> str:
        """Gets the vnfd_id of this VnfOnboardingReply.


        :return: The vnfd_id of this VnfOnboardingReply.
        :rtype: str
        """
        return self._vnfd_id

    @vnfd_id.setter
    def vnfd_id(self, vnfd_id: str):
        """Sets the vnfd_id of this VnfOnboardingReply.


        :param vnfd_id: The vnfd_id of this VnfOnboardingReply.
        :type vnfd_id: str
        """
        if vnfd_id is None:
            raise ValueError("Invalid value for `vnfd_id`, must not be `None`")  # noqa: E501

        self._vnfd_id = vnfd_id
