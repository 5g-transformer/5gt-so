# Author: Jordi Baranda
# Copyright (C) 2019 CTTC/CERCA
# License: To be defined. Currently use is restricted to partners of the 5G-Transformer project,
#          http://5g-transformer.eu/, no use or redistribution of any kind outside the 5G-Transformer project is
#          allowed.
# Disclaimer: this software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied.

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AppOnboardingReply(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, onboarded_app_pkg_id: str=None, app_d_id: str=None):  # noqa: E501
        """AppOnboardingReply - a model defined in Swagger

        :param onboarded_app_pkg_id: The onboarded_app_pkg_id of this AppOnboardingReply.  # noqa: E501
        :type onboarded_app_pkg_id: str
        :param app_d_id: The app_d_id of this AppOnboardingReply.  # noqa: E501
        :type app_d_id: str
        """
        self.swagger_types = {
            'onboarded_app_pkg_id': str,
            'app_d_id': str
        }

        self.attribute_map = {
            'onboarded_app_pkg_id': 'onboardedAppPkgId',
            'app_d_id': 'appDId'
        }

        self._onboarded_app_pkg_id = onboarded_app_pkg_id
        self._app_d_id = app_d_id

    @classmethod
    def from_dict(cls, dikt) -> 'AppOnboardingReply':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppOnboardingReply of this AppOnboardingReply.  # noqa: E501
        :rtype: AppOnboardingReply
        """
        return util.deserialize_model(dikt, cls)

    @property
    def onboarded_app_pkg_id(self) -> str:
        """Gets the onboarded_app_pkg_id of this AppOnboardingReply.


        :return: The onboarded_app_pkg_id of this AppOnboardingReply.
        :rtype: str
        """
        return self._onboarded_app_pkg_id

    @onboarded_app_pkg_id.setter
    def onboarded_app_pkg_id(self, onboarded_app_pkg_id: str):
        """Sets the onboarded_app_pkg_id of this AppOnboardingReply.


        :param onboarded_app_pkg_id: The onboarded_app_pkg_id of this AppOnboardingReply.
        :type onboarded_app_pkg_id: str
        """
        if onboarded_app_pkg_id is None:
            raise ValueError("Invalid value for `onboarded_app_pkg_id`, must not be `None`")  # noqa: E501

        self._onboarded_app_pkg_id = onboarded_app_pkg_id

    @property
    def app_d_id(self) -> str:
        """Gets the app_d_id of this AppOnboardingReply.


        :return: The app_d_id of this AppOnboardingReply.
        :rtype: str
        """
        return self._app_d_id

    @app_d_id.setter
    def app_d_id(self, app_d_id: str):
        """Sets the app_d_id of this AppOnboardingReply.


        :param app_d_id: The app_d_id of this AppOnboardingReply.
        :type app_d_id: str
        """
        if app_d_id is None:
            raise ValueError("Invalid value for `app_d_id`, must not be `None`")  # noqa: E501

        self._app_d_id = app_d_id
