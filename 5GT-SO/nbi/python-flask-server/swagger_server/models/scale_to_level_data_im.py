# Author: Jordi Baranda
# Copyright (C) 2019 CTTC/CERCA
# License: To be defined. Currently use is restricted to partners of the 5G-Transformer project,
#          http://5g-transformer.eu/, no use or redistribution of any kind outside the 5G-Transformer project is
#          allowed.
# Disclaimer: this software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied.

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.scale_info_im import ScaleInfoIm  # noqa: F401,E501
from swagger_server import util


class ScaleToLevelDataIm(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, instantiation_level_id: str=None, scale_info: List[ScaleInfoIm]=None, additional_param: str=None):  # noqa: E501
        """ScaleToLevelDataIm - a model defined in Swagger

        :param instantiation_level_id: The instantiation_level_id of this ScaleToLevelDataIm.  # noqa: E501
        :type instantiation_level_id: str
        :param scale_info: The scale_info of this ScaleToLevelDataIm.  # noqa: E501
        :type scale_info: List[ScaleInfoIm]
        :param additional_param: The additional_param of this ScaleToLevelDataIm.  # noqa: E501
        :type additional_param: str
        """
        self.swagger_types = {
            "instantiation_level_id": str,
            "scale_info": List[ScaleInfoIm],
            "additional_param": str
        }

        self.attribute_map = {
            "instantiation_level_id": "instantiationLevelId",
            "scale_info": "scaleInfo",
            "additional_param": "additionalParam"
        }

        self._instantiation_level_id = instantiation_level_id
        self._scale_info = scale_info
        self._additional_param = additional_param

    @classmethod
    def from_dict(cls, dikt) -> "ScaleToLevelDataIm":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ScaleToLevelData_im of this ScaleToLevelDataIm.  # noqa: E501
        :rtype: ScaleToLevelDataIm
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instantiation_level_id(self) -> str:
        """Gets the instantiation_level_id of this ScaleToLevelDataIm.


        :return: The instantiation_level_id of this ScaleToLevelDataIm.
        :rtype: str
        """
        return self._instantiation_level_id

    @instantiation_level_id.setter
    def instantiation_level_id(self, instantiation_level_id: str):
        """Sets the instantiation_level_id of this ScaleToLevelDataIm.


        :param instantiation_level_id: The instantiation_level_id of this ScaleToLevelDataIm.
        :type instantiation_level_id: str
        """

        self._instantiation_level_id = instantiation_level_id

    @property
    def scale_info(self) -> List[ScaleInfoIm]:
        """Gets the scale_info of this ScaleToLevelDataIm.


        :return: The scale_info of this ScaleToLevelDataIm.
        :rtype: List[ScaleInfoIm]
        """
        return self._scale_info

    @scale_info.setter
    def scale_info(self, scale_info: List[ScaleInfoIm]):
        """Sets the scale_info of this ScaleToLevelDataIm.


        :param scale_info: The scale_info of this ScaleToLevelDataIm.
        :type scale_info: List[ScaleInfoIm]
        """

        self._scale_info = scale_info

    @property
    def additional_param(self) -> str:
        """Gets the additional_param of this ScaleToLevelDataIm.


        :return: The additional_param of this ScaleToLevelDataIm.
        :rtype: str
        """
        return self._additional_param

    @additional_param.setter
    def additional_param(self, additional_param: str):
        """Sets the additional_param of this ScaleToLevelDataIm.


        :param additional_param: The additional_param of this ScaleToLevelDataIm.
        :type additional_param: str
        """

        self._additional_param = additional_param
