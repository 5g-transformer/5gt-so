# Author: Jordi Baranda
# Copyright (C) 2019 CTTC/CERCA
# License: To be defined. Currently use is restricted to partners of the 5G-Transformer project,
#          http://5g-transformer.eu/, no use or redistribution of any kind outside the 5G-Transformer project is
#          allowed.
# Disclaimer: this software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied.

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class NsOnboardingReply(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, nsd_info_id: str=None):  # noqa: E501
        """NsOnboardingReply - a model defined in Swagger

        :param nsd_info_id: The nsd_info_id of this NsOnboardingReply.  # noqa: E501
        :type nsd_info_id: str
        """
        self.swagger_types = {
            "nsd_info_id": str
        }

        self.attribute_map = {
            "nsd_info_id": "nsdInfoId"
        }

        self._nsd_info_id = nsd_info_id

    @classmethod
    def from_dict(cls, dikt) -> "NsOnboardingReply":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NsOnboardingReply of this NsOnboardingReply.  # noqa: E501
        :rtype: NsOnboardingReply
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nsd_info_id(self) -> str:
        """Gets the nsd_info_id of this NsOnboardingReply.


        :return: The nsd_info_id of this NsOnboardingReply.
        :rtype: str
        """
        return self._nsd_info_id

    @nsd_info_id.setter
    def nsd_info_id(self, nsd_info_id: str):
        """Sets the nsd_info_id of this NsOnboardingReply.


        :param nsd_info_id: The nsd_info_id of this NsOnboardingReply.
        :type nsd_info_id: str
        """
        if nsd_info_id is None:
            raise ValueError("Invalid value for `nsd_info_id`, must not be `None`")  # noqa: E501

        self._nsd_info_id = nsd_info_id
