# GA configuration parameters
########################################
crossover_rate: 0.5
mutation_rate: 0.005
solution_pool_size: 50
generations: 20
# one of "cost" (default), "availability", "latency"
optimize_for: "latency"

# convergence criteria
# If convergence_check is set to true, it checks if the value of 
# the objective function does not change more than delta for 
# consecutive generations, and if so for stop_after generations
# it returns the solution. If set to false, execution stops only
# after all generations have been completed.
convergence_check: True
delta: 0.0001
stop_after: 20

# True if we are considering processing latency or not
# (note that processing latency is always used for constraint checking)
processing_latency: False

# Other
########################################

# scenario/topology
# If you comment this out, a "scenario" variable should exist in the configuration
# If the REST front end is in use, typically a "scenario" variable will be
# placed by the caller of the algorithm (REST front end) before initializing
# the algorithm instance.
#scenario_file: "./updated_base_pimrc18_scenario.json"

# where to output the solution
solution_file: "./solution-cost-based.json"

# where to store data on the evolution of the algorithm
# (i.e., fitness function value for best solution per generation)
generations_file: "./generations-cost-based.dat"

# Change to INFO, DEBUG, etc. for a more verbose output
loglevel: "NONE"

# RNG seed
# You can set it for repeatable experiments.
#seed: 1526576593


# Front-end server configuration options
########################################
server_port: 6161

# MongoDB-related information
db_host: "127.0.0.1"
db_port: 27017
db_name: "ga_frontend_db"

