# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LLCapacity(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, total=None, available=None):  # noqa: E501
        """LLCapacity - a model defined in Swagger

        :param total: The total of this LLCapacity.  # noqa: E501
        :type total: float
        :param available: The available of this LLCapacity.  # noqa: E501
        :type available: float
        """
        self.swagger_types = {
            'total': float,
            'available': float
        }

        self.attribute_map = {
            'total': 'total',
            'available': 'available'
        }

        self._total = total
        self._available = available

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LL_capacity of this LLCapacity.  # noqa: E501
        :rtype: LLCapacity
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total(self):
        """Gets the total of this LLCapacity.

        Total link capacity (Mbps)  # noqa: E501

        :return: The total of this LLCapacity.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this LLCapacity.

        Total link capacity (Mbps)  # noqa: E501

        :param total: The total of this LLCapacity.
        :type total: float
        """

        self._total = total

    @property
    def available(self):
        """Gets the available of this LLCapacity.

        Available link capacity (Mbps)  # noqa: E501

        :return: The available of this LLCapacity.
        :rtype: float
        """
        return self._available

    @available.setter
    def available(self, available):
        """Sets the available of this LLCapacity.

        Available link capacity (Mbps)  # noqa: E501

        :param available: The available of this LLCapacity.
        :type available: float
        """

        self._available = available
